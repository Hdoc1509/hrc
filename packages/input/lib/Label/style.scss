@use "@hrc/sass-utils" as hrc;
@use "@scss/colors" as *;

@mixin color-variants($colors) {
  @each $color, $_ in $colors {
    &--#{$color} {
      --_text-focus: var(--#{$color}, #{map-get($colors, $color, main)});
    }
  }
}

.label {
  --_text-focus: var(--label-text-focus, #{hrc.$primary});
  display: inline-flex;
  flex-direction: column;
  gap: 0.25rem;

  font-family: var(--label-font-family, inherit);
  font-size: var(--label-font-size, 0.75rem);
  font-weight: var(--label-font-weight, 400);
  color: var(--label-text, $label-text);

  &:focus-within {
    color: var(--_text-focus);
  }

  @include color-variants(hrc.$colors);

  &--row {
    align-items: center;
    flex-direction: row;
    justify-content: start;
  }
  &--checkbox,
  &--radio {
    font-size: var(--label-font-size, 1rem);
    cursor: pointer;

    &:focus-within {
      color: var(--label-text, $label-text);
    }
  }

  &--with-error {
    color: var(--error, #{hrc.$error});
    --_text-focus: var(--error, #{hrc.$error});
  }

  &--disabled {
    color: var(--label-text-disabled, rgba(0, 0, 0, 0.4));
    pointer-events: none;
  }

  &--fullwidth {
    width: 100%;
  }
}

.helper-text {
  font-size: 10px;
  color: var(--helper-text-color, $input-border-color);

  .label:focus-within &,
  .label--with-error & {
    color: inherit;
  }
}
